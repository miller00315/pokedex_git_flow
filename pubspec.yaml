name: poke_dex
description: A new Flutter project.

publish_to: 'none' 

version: 1.0.0+1

environment:
  sdk: ">=2.15.1 <3.0.0"

dependencies:
  flutter:
    sdk: flutter

  # The AlignPositioned aligns, positions, sizes, rotates and transforms its child in relation to both the container and the child itself
  align_positioned: ^3.0.0
  
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

  # Functional programming in Dart
  dartz: ^0.10.1

  # Being able to compare objects in Dart often involves having to override the == operator as well as hashCode.
  equatable: ^2.0.0

  # Provides the Observer widget that listens to observables and automatically rebuilds on changes.
  flutter_mobx: ^2.0.5

  # Easily add staggered animations to your ListView, GridView, Column and Row children as shown in Material Design guidelines
  flutter_staggered_animations: "^1.0.0"

  # A Flutter plugin to store data in secure storage
  flutter_secure_storage: ^5.0.2

  # This is a simple Service Locator for Dart and Flutter projects
  get_it: ^7.2.0

  # A flutter package for managing different configurations by merging them together and making them available everythere inside the app via a singleton.
  global_configuration: ^2.0.0-nullsafety.1

  # This package contains a set of high-level functions and classes that make it easy to consume HTTP resources.
  http: ^0.13.4

  # MobX is a state-management library that makes it simple to connect the reactive data of your application with the UI
  mobx: ^2.0.7

  # A wrapper around InheritedWidget to make them easier to use and more reusable.
  provider: ^6.0.2

  # A widget that can be dragged and scrolled in a single gesture and snapped to a list of extents.
  sliding_sheet: ^0.5.2

  # Free Google Translate API for Dart
  translator: ^0.1.7

dev_dependencies:
  flutter_test:
    sdk: flutter

  integration_test:
    sdk: flutter

  mobx_codegen:
  build_runner:
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^1.0.0

  # A library for Dart that generates fake data.
  faker: ^2.0.0

  # Mock library for Dart inspired by Mockito.
  mockito: ^5.1.0

  # A utility for providing mocked response to Image.network in Flutter widget tests.
  network_image_mock: ^2.0.1

  test: any

flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/pokeball.png
    - assets/images/pokeball_dark.png

    - assets/cfg/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Google
      fonts:
        - asset: assets/fonts/ProductSans-Regular.ttf
        - asset: assets/fonts/ProductSans-Bold.ttf
          weight: 700
  


