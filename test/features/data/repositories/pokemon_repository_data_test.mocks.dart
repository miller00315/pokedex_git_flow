// Mocks generated by Mockito 5.1.0 from annotations
// in poke_dex/test/features/data/repositories/pokemon_repository_data_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:poke_dex/features/data/data_sources/pokemon_data_source.dart'
    as _i4;
import 'package:poke_dex/features/data/models/pokemon_list_model.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeClient_0 extends _i1.Fake implements _i2.Client {}

class _FakePokeListModel_1 extends _i1.Fake implements _i3.PokeListModel {}

/// A class which mocks [PokemonDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonDataSource extends _i1.Mock implements _i4.PokemonDataSource {
  MockPokemonDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_0()) as _i2.Client);
  @override
  _i5.Future<_i3.PokeListModel> fetchPokemonList() => (super.noSuchMethod(
          Invocation.method(#fetchPokemonList, []),
          returnValue: Future<_i3.PokeListModel>.value(_FakePokeListModel_1()))
      as _i5.Future<_i3.PokeListModel>);
}
