// Mocks generated by Mockito 5.1.0 from annotations
// in poke_dex/test/stores/pokemon/pokemon_store_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:poke_dex/features/data/models/pokemon_list_model.dart' as _i2;
import 'package:poke_dex/mock/repositories/pokemon_repository_mock.dart' as _i3;
import 'package:poke_dex/mock/repositories/secure_storage_repository_mock.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePokeListModel_0 extends _i1.Fake implements _i2.PokeListModel {}

/// A class which mocks [PokemonRepositoryMock].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRepositoryMock extends _i1.Mock
    implements _i3.PokemonRepositoryMock {
  MockPokemonRepositoryMock() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.PokeListModel> fetchPokemonList() => (super.noSuchMethod(
          Invocation.method(#fetchPokemonList, []),
          returnValue: Future<_i2.PokeListModel>.value(_FakePokeListModel_0()))
      as _i4.Future<_i2.PokeListModel>);
}

/// A class which mocks [SecureStorageRepositoryMock].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageRepositoryMock extends _i1.Mock
    implements _i5.SecureStorageRepositoryMock {
  MockSecureStorageRepositoryMock() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<int> get favorites =>
      (super.noSuchMethod(Invocation.getter(#favorites), returnValue: <int>[])
          as List<int>);
  @override
  set favorites(List<int>? _favorites) =>
      super.noSuchMethod(Invocation.setter(#favorites, _favorites),
          returnValueForMissingStub: null);
  @override
  _i4.Future<List<int>> getFavoritesItems() => (super.noSuchMethod(
      Invocation.method(#getFavoritesItems, []),
      returnValue: Future<List<int>>.value(<int>[])) as _i4.Future<List<int>>);
  @override
  _i4.Future<dynamic> setFavoritesItem(List<int>? ids) =>
      (super.noSuchMethod(Invocation.method(#setFavoritesItem, [ids]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
}
